#    -*- mode: org -*-

#+STARTUP: hideblocks    
#+LATEX_HEADER: \renewcommand{\maketitle}{}
#+LATEX_HEADER: \setlength\parindent{24pt}
#+LATEX_HEADER: \usepackage[margin=1.25in]{geometry}
#+LATEX_HEADER: \usepackage{indentfirst}
#+LATEX_HEADER: \usepackage{fancyhdr} \pagestyle{fancyplain}
#+LATEX_HEADER: \lhead{North Shore Rail Extension}
#+OPTIONS: toc:nil

#+begin_latex

\begin{titlepage}
    \begin{center}
        \vspace*{1cm}
        
        \Huge
        \textbf{North Shore Rail Extension}

        \vspace{2.5cm}
        \textbf{Software Requirements Specification \\}
        \vspace{2.5cm}
        \textbf{Low-Comotivation}
        \vspace{2.5cm}

    \end{center}

    \begin{flushright}        
        \Large
        Prepared By: Zach Scheider \\\ Demetri Khoury \\
        Christen Reinbeck \\ Max Reno \\ Andrew Lendacky
        \\ Michael Ghaben
    \end{flushright}        

        \vfill
    \begin{center}        
        
        \vspace{0.8cm}        

        \Large
        COE1186 â€“ Software Engineering\\
        Instructor: Joseph A Profeta III, Ph.D.\\
        Spring 2017
        
    \end{center}
\end{titlepage}

#+end_latex

#+TOC: headlines 3
\cleardoublepage

* Introduction
** Purpose
   The purpose of this systems requirement specifications document is to provide a detailed description of the requirements for the "North Shore Rail Extension" software. It will declare the requirements and system constraints for the development of the system. It will describe the interface and the communications and interactions between the modules. This document will explain the development intentions to the customer and provide a reference for the team to refer to while building the project.

** Scope

The "North Shore Rail Extension" software designed here is to control a rail system in Pittsburgh. It will run on a Windows machine as a .jar file. 

With this software, users are able to interact with the  system as a whole as well as with individual modules for testing purposes.

Testing consoles are built in to each module in order to see how each works on its own.

In order to accurately test that all pieces are working correctly, and without actual implementation, virtual models for both the track and train are simulated.
** Definitions
| Term               | Definition                                             |
|--------------------+--------------------------------------------------------|
|                    | <54>                                                   |
| User               | Person(s) that interact with the system                |
| Module             | Self-contained piece of the larger program             |
| Train Model        | Train represented through software                     |
| Track Model        | Software representation of the track                   |
| Train Controller   | Allows interfacing with train controls                 |
| Wayside Controller | Vital programmable logic controller for the track      |
| CTC Office         | Central Train Control Office (CTC Office)              |
|                    | Central office that monitors and routes trains         |
| MBO                | Moving Block Overlay (MBO)                             |
|                    | Generates train and driver schedules, and allows for   |
|                    | trains to operate in moving block overlay mode         |
| Vital              | A safety critical component                            |
| Segment            | A piece of the track consisting of one or more blocks  |
| Block              | A piece of a segment                                   |

** References

\noindent
[[https://google.github.io/styleguide/javaguide.html][Google Java Style Guide]] \\

\noindent
Documents provided on COE1186 Courseweb page \\

\noindent
IEEE. IEEE Std 830-1998 IEEE Recommended Practice for Software Requirements Specifications. IEEE Computer Society, 1998. \\

\noindent
[[https://github.com/michaelghaben/ece1186][Lo-Comotivation Git Repository]]

** Overview
   The next section provides an overall description of the system, its functionality, constraints, and interaction with other systems. This will be broken down into subsections, one for each module. 

   The third section provides specific requirements for each module. This will show the products functionality.

* Overall description
** Perspective
This self-contained product consists of the following six modules: the CTC Office, Scheduler/MBO, the Wayside Controller/Track Controller, Track Model, Train Model, and the Train Controller. These six modules are designed to run together in order to simulate the function of a fully-developed train control system. However, the Track Model and Train Model are strictly for testing purposes. They will be switched for an actual track and train when this is to be implemented. 

** Functions
The "North Shore Rail Extension" has the overall function of operating a transit system distributed among six modules. The CTC office acts as the control center for the system. It has the ability to dispatch trains and alter switches on the track while in manual mode. The MBO creates schedules for the drivers and the trains. It also is the responsible for moving block overlay mode, which replaces the fixed block operating mode. The Track Controller determines the positions of the switches and crossings, and is where the PLC is programmed. The Track Model simulates the track. It determines if a block is occupied or not. The Train Controller is responsible for operating the speed of the train, the air conditioning, doors and lights. The Train Model simulates a train on the track. It attempts to approximate the physics of an actual train which is reflected in the speed.

The program will be able to simulate several different types of failures such as; track failures, engine failures, and the antennae failure.

** User Characteristics
The dispatch communicates with the rest of the system through the CTC Office. This user must be able to operate the CTC Office, dispatch trains, interpret the track schedule, and handle failure states. 

The wayside engineer operates the track from the Wayside Controller. They must know how to write PLC code to dictate the functionality of track blocks. They must also know how to act to handle failure states. 

The transit operator uses the Train Controller to navigate the route according to the schedule. This user should have a good working knowledge of the train controls and the train schedule and know the correct procedures of operation for what to do in an emergency.

The passenger is able to operate the emergency brake, which is located on each train.

A test user will be able to test the functionality of all six modules. They will be able to test certain scenarios specific to an individual module.  

** Constraints
1. The system shall be submitted as an executable.
2. The executable should be able to run on Windows 10.
3. Each module will have a Graphical User Interface (GUI) for ease of use.
4. The system must be adaptable for different track layouts.
5. The system is a safety critical application.

** Assumptions and Dependencies
The program is assumed to be running on a Windows machine with JDK 8 installed.

The modules are only able to communicate with certain other modules. They must follow the specified communication path.
** Apportioning of Requirements

The requirements will be implemented in the order of more critical components will be implemented first.

For more information, see the work schedule document.
* Specific Requirements
** Functional Requirements
*** Central Train Control Office
**** Trains
***** Routing

A dispatcher should be able to create a route of a train.
****** Exact sequence of operations

A dispatcher will press the button "Dispatch Train" and it will propagate a pop up window where he/she can select a line, speed and authority.

This will then dispatch a train from the yard.
****** Communication facilities

Need info from wayside about blocks in order to maintain a fixed block type of schedule.
****** Error handling and recovery

Deny a train from being dispatched if block it is entering is not free.
****** Relationship of output to input

A dispatcher inputs line, speed and authority for a train to then leave the yard.
***** Scheduling

A dispatcher should be able to choose the type of schedule, automatic and manual, MBO and fixed block. 
****** Exact sequence of operations

A dispatcher will choose will either choose Automatic or Manual mode for the schedule.

If Automatic is chosen, then dispatcher can choose between MBO and Fixed Block modes.

If Manual is chosen, then dispatcher is responsible for manually dispatching trains from the yard.
****** Responses to abnormal situations

If communication between MBO and CTC is severed, then the dispatcher will then be notified to dispatch trains via manual mode.
****** Communication facilitates

The actual schedule is received from the MBO.
****** Relationship of output to inputs

Depending on the mode of schedule input by the dispatcher, it will affect how trains are being directed around the track.
***** Monitoring

The office should monitor current block statuses as well as the speed and authority of any train on the track.
****** Exact sequence of operations

There are two separate sections which will display either information about a chosen block or a chosen train per the dispatchers choices in the interface.
****** Responses to abnormal situations

If communication between the CTC and wayside controller is severed, trains may operate as usual as they can still obtain a schedule or operate in manual mode on their own. However, the CTC will not be able to see any info about the blocks/trains.
****** Communication facilities

All track/block information as well as the speed/authority/GPS location of trains comes from the wayside controller.
****** Relationship of output to inputs

A dispatcher will enter either a specific line/segment/block or train and then receive information corresponding to that piece.
**** Track Segment
***** Open/Close Tracks

The dispatcher should be able to close a block for maintenance, as well as dispatch maintenance to a certain block.
****** Exact sequence of operations

The dispatcher will be alerted to a failure via the far left color-changing block. In the track section of the interface, a dispatcher can select a line/segment/block. Then he/she can select the "Close Track" button followed by the "Send Maintenance" button. Sending maintenance will fix the block and automatically reopen the block.
****** Responses to abnormal situations

Should a failure occur, the dispatcher will close and repair a block.
****** Communication facilities

The wayside controller will be communicating track failures to the CTC.
****** Relationship of output to inputs

When a dispatcher sends out maintenance/closes a block, then trains will not be allowed to enter this block until it is fixed. 
**** Authority/Speed

The office can determine each train's authority/speed.
***** Exact sequence of operations

In the train portion of the interface, a dispatcher can select the "Authority" button or "Speed" button which will propagate a pop up window. In this window, a dispatcher can input the authority in feet, as well as check which train they are assigning this authority to.
***** Communication facilities

The authority is sent from the CTC to the wayside controller.
***** Relationship of output to inputs

This indirectly effects the trains speed/authority. The CTC communicates with the wayside who in turn communicates with other members of the communication path.
**** System Display

The office should display information about the entire transit system. Including: train speed/authority, track block status, throughput, switch direction, railway crossing status, light status, track/train failures.
***** Exact sequence of operations

Upon selecting a certain block or train, information from the wayside controller will be displayed.
***** Communication facilities

The wayside controller provides the CTC with this information.
**** Communication
***** Inputs 
****** Schedule
******* From where?

MBO
******* Used for?

Displaying to dispatcher. 
****** Track Information/failures
******* From where?

Wayside controller
******* Used for?

Displaying to dispatcher.
****** Train Information/failures
******* From where?

Wayside controller/MBO
******* Used for?

Displaying Speed/Authority to dispatcher.
***** Outputs 
****** Automatic versus Manual Mode (also MBO versus fixed if automatic is chosen)
******* To where?

Wayside controller/MBO
******* Used for?

Given to wayside controller to then communicate to trains. 

Given to MBO to decide which kind of schedule is being run.
****** Close Track/Send Maintenance
******* To where?

Wayside controller
******* Used for?

Shutting down a block of track so that trains cannot travel on it.
****** Speed/Authority
******* To where?

Wayside Controller
******* Used for?

Giving a suggestion of speed and authority to wayside to communicate to trains.
****** Dispatch Train (when in manual)
******* To where?

Wayside Controller
******* Used for?

When in manual mode, and acting outside of a schedule, the dispatcher can dispatch trains from the yard.
*** Wayside Controller
**** Display
***** CTC Display

A list of trains and their speed and authorities from the CTC will be displayed.
****** Exact sequence of operations

Values communicated to wayside unit, displayed on console.
****** Communication facilities

CTC
****** Formulas for input to output conversion

Units shown will be calculated in metric as given/supplied and converted to imperial for display.
***** Track Model Display

A list of blocks, select-able by line and segment, will be display with relevant information.
****** Communication facilities

Track Model
****** Formulas for input to output conversion

Units shown will be calculated in metric as given/supplied and converted to imperial for display.
***** Message Board

Relevant information that doesn't apply to other two displays will appear here, such as debugging statuses, failure notices, syntax errors in PLC code.
****** Formulas for input to output conversion

Units shown will be calculated in metric as given/supplied and converted to imperial for display.
**** Control
***** PLC

The user will be able to load in a PLC program, supplying a file path or browsing for the file.
****** Validity checks on inputs

File not found or does not exist.

PLC file contains errors or is not valid.
****** Exact sequence of operations

User loads in file, and once loaded, PLC unit controls state of track using Boolean logic to determine signals to send to track model components.
****** Relationship of output to inputs

Outputs will vary on inputs from the CTC and Track Model.
****** Input/Output sequences

PLC unit will take in speed/authority suggestions from CTC, as well as block occupancy and associated block information (lights, crossings, etc) from track model.
***** Testing

A test console will be available for the user to simulate (for testing/debugging purposes) inputs coming into the wayside unit to observe its behavior.
****** Exact sequence of operations

User opens test console, fixes desired track & train info, and clicks "OK" to give wayside specified information.
**** Communication
***** Inputs
****** Speed/Authority Suggestion
******* From where?

CTC
******* Checks to do

Make sure it is a valid suggestion.
******* Used for?

Setting speed/authority of desired train.
****** Block Occupancy
******* From where?

Track Model
******* Used for?

Determining occupied/unoccupied sections of track.
****** Railroad Crossing Status
******* From where?

Track Model
******* Used for?

Determining active/inactive railroad crossings.
****** Switch Status
******* From where?

Track Model
******* Used for?

Determining position of a switch.
****** Lights Status
******* From where?

Track Model
******* Used for?

Determining active/inactive lights.
****** Track Heater Status
******* From where?

Track Model
******* Used for?

Determining on/off status of track heaters.
***** Outputs
****** Track State
******* To where?

CTC
******* Used for?

Displaying light status, switch status, railroad crossing status, block occupancy, and other information about block to the Dispatcher.
****** Track State Manipulations
******* To where?

Track Model
******* Checks to do

PLC code will determine outputs to change state of track.
******* Used for?

Sending signals to track model in order to change the direction of a switch, turn on or off a light, activate/deactivate a railroad crossing, set speed/authority for a train.
*** Track Model
**** Grade and Elevation

The track model should consider grade and elevation that is contained in the excel file provided by the user.
***** Exact sequence of operations

The track model initializes. The track model then receives signal
***** Communication facilities

The track model will provide accessors and mutators to the rest of the modules for communication. 

It will provide scripts to read the excel files. 

It will assume responsible behavior by the connected modules (e.g. modules that should not access data will not)
***** Effect of parameters

Different train inputs will result in different outputs.
***** Input/Output sequences

The input to the track model is an excel file.
***** Formulas for input to output conversion

Convert km to miles.
**** Model Configuration

The track model should be able to be configured through user input.
**** Track Configuration

The track track layout should be able to configured through user input.
***** Validity checks on inputs

There are no validity checks on the input. It is assumed that the track results in a complete loop.
***** Exact sequence of operations

The track initializes a Python script that reads the excel file into a serializable format such as JSON or protobuf. It then reads the serialized data into the Java run-time environment and plots the map. Additionally, it will parse the relevant data and store them in a structure for mutability by other components.
***** Communication facilities

Will provide accessors and constructors to communicate with other parts.
***** Error handling and recovery

It is assumed that the inputs to the track model are valid and will not be checked. This is due to the track model being dropped out at the end of the project for a physical model.
***** Relationship of output to inputs

The various parameters imputed by the excel file (grade, length, etc.) will results in different tracks being rendered and loaded into the program.
***** Input/Output sequences

Takes in excel file. Outputs track models.
***** Formulas for input to output conversion

1m = 3.3 ft
**** Block Configuration

The tracks block size should be able to edited.
**** Signals and Switches

The track model should have visible signals and switch machines. These will be shown in the visual region.
**** Presence Detection

The track model should detect whether or not a train is currently on the block.
***** Exact sequence of operations

Presence detection will be done via the signals sent from the track circuit.
***** Communication facilities

The track model will contain the ability to determine the occupancy of a specific grouping of blocks when called by an external program.
***** Relationship of output to inputs

The track model will receive a signal from the track circuit on the occupancy of a specific block. The track model will output the occupancy of the block for use by the wayside controller.
**** Railway Crossings

The Track Model should take railway crossings into account.
***** Exact sequence of operations

The track model receives a setting of either "up" or "down" for railway crossings and adjusts model parameters accordingly.
***** Communication facilities

Has an input for the wayside controller to toggle the railway crossings.
***** Effect of parameters

A 1 signifies that the railway crossing is up

A 0 signifies that the railway crossing is down.
***** Relationship of output to inputs

The track model sets the railway crossing to up or down.
**** Loading/Unloading People

The track model should populate stations with the number of people loading onto the train and ensure that the passengers on a train doesn't exceed the maximum.
The number of people leaving each train should be sent to the track model from the train model.
***** Exact sequence of operations

Receives input to load people onto train.

Draws a random number taking time into account  and loads returns the passengers on to the train.
***** Communication facilities

Sends a message to the train model to add people to the train.
***** Effect of parameters

Adds people to the train.
**** Track Heaters

The track model should have heaters located at each station.
***** Exact sequence of operations

Turns track heaters on if the temperature (in F) is less than 32. Turns them off otherwise.
***** Relationship of output to inputs

If the temperature is below a threshold, the track heaters are turned on. Else, they are turned off
**** Failure Modes
***** Broken Rail
****** What does it mean?

That a rail has been broken or damaged in a way to throw an error.
****** When does it occur?

When something breaks. This will be simulated randomly.
****** Which modules are affected?

All of the modules, either directly or indirectly.
****** How do you recover?

CTC sends a repair crew to fix the broken rail.
***** Track Circuit Failure
****** What does it mean?

The track circuit has been broken.
****** When does it occur?

When the track circuit connections are disconnected at a physical level. This can occur in situations such as vandalism.
****** Which modules are affected?

All modules, either directly or indirectly. The track must function.
****** How do you recover?

CTC sends a repair crew to fix the track circuit failure.
***** Power Failure
****** What does it mean?

The track loses power.
****** When does it occur?

When the track power supply fails.
****** Which modules are affected?

All modules that require the track to be functioning are affected.
****** How do you recover?

CTC sends a repair crew to fix the track power failure.
*** Train Model
**** Calculate Physics
***** Power Command

Calculate the correct amount of power to supply in order to achieve the correct speed.
****** Validity checks on inputs

The power command obtained as input from the train controller, will be verified to be greater than or equal to 0. 

The trains cannot operate in reverse therefore the set speed assigned by the train controller must either be setting the train to a positive speed or telling the train to stop (power command of 0).
****** Exact sequence of operations

The train controller will set a speed for the train to follow. This speed will either be set by the driver (in manual mode) or the wayside (in automatic mode).
This set speed will then be converted into a power command based on the current velocity of the train and the speed desired by the controller. 

The corresponding power command will be sent to the train controller and using internal calculations of the train model the set speed for the train will be met.
****** Responses to abnormal situations

If there is any sort of failure in the system that effects the train model, the power command will be overridden and set to 0. This will cause the service brakes to activate to slow down the train whenever possible.
****** Communication facilitates

The current velocity will be obtained from the train model and passed on to the train controller.

The power command based on current velocity will be communicated back from the train controller to the train model.
****** Error handling and recovery

Any sort of error or failure will result in the activation of the service or emergency brakes in order to bring the train to a complete stop. 

The recovery process will require the CTC to send maintenance to recover the train and resolve the error.
****** Effect of parameters

The parameters that will be used for this calculation include current velocity, power command, mass, and acceleration/deceleration rates.

The only parameter that will change in this scenario is the current velocity of the train model.
****** Relationship of output to inputs

The output of the train controller will be a power command to meet the set speed assigned in the module and this will translate into an input to the train model.

The output of the train model will be the current velocity derived from this calculation and will translate into an input passed back to the train controller.
****** Input/Output sequences

If the power command results in a larger speed than the current velocity, the train will accelerate to meet the set speed by the train controller.

If the power command results in a speed lower than the current velocity, the train will decelerate to meet the set speed by the train controller.

If the power command results in a speed of zero the service brakes will be applied until the train comes to a full stop.
***** Current Velocity 

Calculate the current velocity of the train in observation.
****** Validity checks on inputs

The current velocity of the train must be a positive value as the trains in this system can not operate in reverse.

The input to calculate the current velocity will be the power command setting the set-point speed for the train and this value will be verified as detailed above.
****** Exact sequence of operations

The Power command input from the train controller will be taken into the train model computation sequence.

The current velocity will be computed based on the error between the new set speed and the current speed.

This velocity will be based on mass, acceleration, and friction on the track.
****** Responses to abnormal situations

If there is any sort of failure in the system that effects the train model, the current velocity will be decreased to 0 as the train comes to a full stop.
****** Communication facilitates

The current velocity will be computed in the train model and passed on to the train controller.

The train controller will use the current velocity to compute the required power command to send back to the train model to meet the set speed of the train.
****** Error handling and recovery

Any sort of error or failure will result in the activation of the service or emergency brakes in order to bring the train to a complete stop. 

The recovery process will require the CTC to send maintenance to recover the train and resolve the error.
****** Effect of parameters

The parameters that will be used for this calculation include power command, mass, and acceleration/deceleration rates.

The only parameter that will change in this scenario is the current velocity of the train model.
****** Relationship of output to inputs

The output of the train controller will be a power command to meet the set speed assigned in the module and this will translate into an input to the train model.

The output of the train model will be the current velocity derived from this calculation and will translate into an input passed back to the train controller.
****** Input/Output sequences

If the power command is larger than the current speed the current velocity will increase to match the set speed for the train.

If the power command is smaller than the current speed the current velocity will decrease to match the set speed for the train.

If the power command calls for a stop the current velocity will be decreased to bring the train to a complete stop before continuing.

***** Safe Braking Distance

Calculate the safe braking distance for the train (Service and emergency). 
****** Validity checks on inputs

If the trains Authority obtained from the track model is smaller than or equal to the safe braking distance of the train, the train will apply the service brakes to bring the train to a full stop until a new authority is passed to the train model.
****** Exact sequence of operations

The train model will take in the number of passengers on-board and compute the total mass of the train including passenger weight. 

The maximum deceleration for each type of brake will be used to compute the safe braking distance based on the current speed and weight of the train.

The safe braking distance will then be compared to the current authority and if it exceeds the authority of the train it will cause the service brakes to engage. 
****** Responses to abnormal situations

There are some abnormal situations that may arise that would effect the safe braking distance, such as a system failure, or a sudden change in authority. 

The response to any abnormal situation will always be to engage the service or emergency brakes and stop the train as soon as possible. 
****** Communication facilities

The safe braking distance will be calculated using data stored in the train model and will be compared to the authority sent from the track model.
****** Error handling and recovery

Any sort of error or failure will result in the activation of the service or emergency brakes in order to bring the train to a complete stop. 

The recovery process will require the CTC to send maintenance to recover the train and resolve the error.
****** Effect of parameters

The parameters that will be used for this calculation include total mass, Authority, and maximum deceleration. 

The only parameter that will change in this scenario is the safe braking distance of the train model.
****** Relationship of output to inputs

The output of this calculation will be used as a test case for authority within the train model, before increasing or decreasing speed to satisfy a power command.
****** Input/Output sequences

The Authority will be input to the train model via the track model and this input will be passed into the safe braking distance calculation. 

Based on the mass and current speed the safe braking distance will be computed by the train model and compared to the authority.

An output verifying that the authority is larger than the safe braking distance will be passed out through the system to the further part of the calculation. 
**** Communication

A major role of the train model is to display train data and statuses based on inputs and outputs required to be displayed on to the user. 
***** Inputs

Various inputs will be passed into the train model and will be used for calculations or as status displays for the user.
****** Power Command
******* Used for?

The power command will be used to determine what speed to increase or decrease the train to. This power command will be computed in the train controller based on the set speed and the current velocity of the train.
******* Checks to do

The train model will check that the power command is a positive value which either increases or decreases the current velocity of the train. If the value is less than the current velocity, the train will decelerate to the set speed. 
If the power command is greater than the current velocity, the train will accelerate to the set speed.
******* From where?

The power command input will be sent to the train model from the train controller module.
****** Authority
******* Used for?

The authority of the train will be passed to the train model to display to the user how fair the train can travel before its required to stop. 

This value will be used as a to verify the safe braking distance of the train model.
******* Checks to do

The authority will be checked to verify that the distance is greater than the safe braking distance of the train to ensure there will not be a problem with continuing at the current speed.
******* From where?

The authority will be assigned by the track controller and passed to the train model via the train controller 
****** Right/Left Door Status
******* Used for?

The status of the left and right doors will be displayed as part of the train model interface. 

This input will be set to open, closed , or failure based on the state of each set of doors. 

The doors will be opened at each station to allow passengers to embark and closed while train is in operation.
******* Checks to do

The status of the doors will be checked to be open or closed and this value will be displayed to the console. 

A status change can be passed onto the train model and this will be changed to match on the display.

The door status will be checked for a failure status and this will also be displayed on the console in place of open or closed.
******* From where?

In manual mode the driver will operate the closing and opening of doors and the input will be received from the train controller.

In automatic mode the train controller will automatically open and close doors at arrival and departure at each station.
****** Interior Light Status
******* Used for?

The status of the interior lights will be displayed as part of the train model interface. 

This input will be set to on,off, or failure based on the state of the lights. 
******* Checks to do

The status of the lights will be checked to be on or off and this value will be displayed to the console. 

A status change can be passed onto the train model and this will be changed to match on the display.

The interior light status will be checked for a failure status and this will also be displayed on the console in place of on or off.
******* From where?

The interior lights will be controlled by the train controller and the input changing the status will be sent to the train model.
****** Temperature/Thermostat Status
******* Used for?

The current temperature of the train will be monitored by the train and this value will be set by the internal testing system.

The thermostat setting will also be displayed on the train model to meet the needs of the train. 

The thermostat will be used to increase or decrease on-board temperature based on the current temp.
******* Checks to do

The thermostat setting will be checked to be a valid positive value.

If the thermostat setting is larger than the current temperature the temperature will be increased to match.

If the thermostat setting is larger than the current temperature, the temperature will be decreased to match.
******* From where?

The thermostat input will be send via the train controller to the train model.

In manual mode the driver will  set the thermostat setting using the train controller interface.

In automatic mode the train controller will automatically adjust the thermostat to keep the train at the ideal temperature programmed by the system.
****** Service/Emergency Brakes
******* Used for?

The service and emergency brakes will be used to decelerate the train of bring the train to a full stop.

The service brake will be used in typical scenarios where the speed is needed to decrease to be below a speed limit or to come to a halt at the station.

The emergency brake will be used in abnormal situations such as failures or sudden change in authority or drastic drop in speed which will not be met with the deceleration rate of the service brakes.
******* Checks to do

The Service brakes will be checked to be on, off, or in a state of failure. 

If the service brakes are on the train will decelerate as needed to meet the speed set-point of the train.

If the service brakes are in a state of failure the emergency brakes will be used in this scenario.
******* From where?

The service brake status will be sent via the train controller.

In manual mode the driver will engage the service brakes to bring the train to halt. 

In automatic mode the service brakes will engage and disengage automatically to decrease speed or bring the train to a halt at the stations.

The emergency brake input will be sent via the train controller.

The Emergency brake can be engaged either manually by the driver or by any passenger on board.

***** Outputs 

Various outputs will be recorded and passed out of the train model and will be used internally as well as in other models
****** Current Velocity
******* Used for?

The primary output of the train model is the current velocity of the train. 

This value will be used to compute the power command based on the difference between the current speed and the set-point speed.
******* Checks to do

The model will check that the current velocity is positive and that the power command will either increase or decrease the speed to match the set-point.
******* To where?

The current velocity will be output to the train controller which will use the difference between the current velocity and the set-point speed to determine the power command required.
****** Height/Width
******* Used for?

The height and width of the train will be maintained and displayed as part of the train model console.

These values are constant and will be used as reminders for height and width clearance for the train primarily when entering stations or tunnels.
******* Checks to do

These values will never change so the only checks that will be performed is to verify the height of the train will fit below any infrastructure along the track.
******* To where?

This output will be displayed to the train model console and will not be passed to any other system.
****** Length/ number of cars
******* Used for?

The length of the train and the number of attached cars will be recorded and monitored by the train model.

These values will be used to track the maximum passenger count allowed as well as how much space the train is taking up on the track.
******* Checks to do

The length of the train will be used primarily in MBO mode when some train may overlap in the same block. This length will be used along with the safe braking distance to minimize failures and train collisions in the system.
******* To where?

The length of the train will be sent to the MBO for tracking train locations and occupancy on the track.
****** Passenger/Crew Count
******* Used for?

The number of passengers and crew members on board will be tracked by the train model. This number will be stored by the model and added to as passengers embark on a station and subtracted from as they disembark.

This value will also be used to track the throughput of the train system which will be displayed as part of the CTC module.
******* Checks to do

The output will be checked to verify that the total number of passengers and crew do not exceed the maximum capacity of the train.

Also the check will be made to verify that the number of passengers disembarking does not exceed the number of passengers on board.
******* To where?

The number of passengers on board will be stored and displayed to the train model.

The number will also be output to the CTC to calculate the throughput of the system.
****** Mass
******* Used for?

The mass for the train will be recorded and used for all physics calculations within the train model.

This value will be updated based on the train weight and the weight of all passengers on board.
******* Checks to do

The system will check that as passengers embark and disembark the mass will fluctuate accordingly. 
******* To where?

This output will be displayed to the train model console and will not be passed to any other module.
**** Failure Modes

***** Engine Failure
****** What does it mean?

An engine failure means there is a loss of power in train engine and as a result is unable to increase speed as requested.
****** When does it occur?

This occurs when Murphy engages the failure command to activate an engine failure on board the system
****** Which modules are affected?

The engine failure will directly effect the train model and train controller as this occurs on board the train.

This will also indirectly affect the track model, track controller and CTC as the current block will need to be shut down until restored.
****** How do you recover?

The train will recover from this failure mode with two steps.

First, the train will come to a full stop as soon as physically possible. This will be performed by the service brakes if possible otherwise the emergency brakes will need to be used.

Next, the CTC is required to send maintenance to the blocked off track to repair the train engine.
***** Brake Failure 
****** What does it mean?

A brake failure means there is a failure state in the service brakes on board the train. 
****** When does it occur?

This occurs when there is a problem with the braking system. This will be another component controlled by Murphy.
****** Which modules are affected?

The brake failure will directly effect the train model and train controller as this occurs on board the train.

This will also indirectly affect the track model, track controller and CTC as the current block will need to be shut down until restored.
****** How do you recover?

The train will recover from this failure mode with two steps.

First, the train will come to a full stop as soon as physically possible. This will be performed by the emergency brakes since the service brakes are out of operation.

Next, the CTC is required to send maintenance to the blocked off track to repair the train.
***** Signal Failure
****** What does it mean?

The signal failure means there is a failure in the antenna on-board the train and there is loss of communication between the train and the external modules.
****** When does it occur?

This occurs as a result of Murphy activating the signal failure button to cause this error on board the train.
****** Which modules are affected?

The signal failure will directly effect the train model and train controller as this blocks any communication between the two modules.

This will also indirectly affect the track model, track controller and CTC as the current block will need to be shut down until restored.
****** How do you recover?

The train will recover from this failure mode with two steps.

First, the train will come to a full stop as soon as physically possible. This will be performed by the service brakes if possible otherwise the emergency brakes will need to be used.

Next, the CTC is required to send maintenance to the blocked off track to repair the train.
*** Train Controller
**** Decode Track Signal

The signal from the track circuit should be decoded into a speed limit and authority.
**** Safety
***** Speed Limit

The train should be stopped from exceeding the speed limit.
****** Validity checks on inputs

If the train is over the accepted speed limit of the block or the suggested speed set by the CTC, the train's service brakes will be applied to slow down the train to the correct speed. 
****** Exact sequence of operations

When the user selects the train from the list of dispatched trains, the system will check to make sure the speed of the train is less than that of the suggested speed (automatic mode), or the speed of the train is less than the block speed (manual mode).

This will be done by comparing the speed of the train to the suggested speed and block speed found under the Speed Controller and Block Info sections of the Train Controller. 
****** Responses to abnormal situations

If the service brakes are down on the train, and cannot be applied to slow the train down, the train will use their emergency brakes to come to a complete stop until the service brakes are able to be repaired.  
****** Communication facilities

Determining the speed of the train comes from the tachometer on the train.

Determining the block speed and the suggested speed comes from the wayside controller and the CTC, respectively. 
****** Relationship of output to inputs

When the train is selected, the trains speed will be displayed to the Train Controller. If the speed is determined to be faster than required, the brakes on the train will be signaled from the Train Controller to initiate the brakes on the train. 
****** Input/Output sequences

The speed of the train is determined from the train. If the speed is faster than the desired speed, the brakes are applied until the train's speed meets the speed limit. 
****** Formulas for input to output conversion

The speed is retrieved as KPH, but needs to be converted to MPH. 1 KPH is equal to 0.621371 MPH.
***** Authority

The train should be stopped from exceeding the authority limit.
****** Validity checks on inputs

The authority will be checked to make sure that it contains digits (0-9), and does not contain any alphanumeric (A-Z, a-z), and special (&,*,!,@, etc..) characters.  
****** Exact sequence of operations

When the authority for the train is received, begin calculating the distance traveled. Once the train reaches the maximum distance, it must then change it's speed to the appropriate speed for the new authority of the block. 
****** Communication facilities

The authority is decoded by the track and picked up by the train model. 
****** Relationship of output to inputs

The selected train gives the Train Controller its authority to display. 
****** Formulas for input to output conversion

Computes the fraction of the distance traveled to the total authority distance, and signals when the fraction equals 1. 

The authority is retrieved in meters, but needs to be converted to miles (mi). 1 m is equal to 0.000621371 mi.   
**** Door Operation

The appropriate doors should open upon arriving at a station and close before leaving the station.
***** Validity checks on inputs

In automatic mode, the doors are controlled automatically by the train when arriving to the station. 

In manual mode, the doors are controlled by the driver, and it is their responsibility to open/close the doors when arriving and leaving a station. In this mode, the user cannot open or close the doors unless the train's speed is 0 MPH. 
***** Exact sequence of operations

When in manual mode, the driver can open/close the left and right doors of the train. When the driver chooses to open/close the doors, the train's speed must be 0 MPH. To prevent any injuries, the doors will not open if the speed of the train is greater than 0 MPH. 
***** Responses to abnormal situations

If the doors are in the failure state, the driver cannot change the state of the doors, and must wait until the doors are fixed. 
***** Communication facilities

The train model determines the state that the left and right doors are in. Whenever the state is changed it is sent to the train model.
***** Relationship of output to inputs

When a door is changed from open to close, or vice versa, the new state is sent to the train and changes the state of the door to follow the new state. 

When a door is changed from open to close, or vice versa, the new state is updated on the Train Controller to display the state of the door.  
***** Input/Output sequences

In manual mode, when a train is selected, the Train Controller will the display the states of the left and right doors based on the state determined from the train.

When the driver changes the state from the Train Controller, the new state is sent to the train, and the corresponding door is changed to the new state. 

In automatic mode, when a train is selected the Train Controller will display the states of the left and right doors based on the state determined from the train. 

In this mode, the doors are controlled by the train when arriving and leaving a station. Then the states are changed on the train, the state of the doors will be reflected on the Train Controller. 
**** Announcement System

The upcoming station should be announced shortly before arriving at the station.
***** Validity checks on inputs

In manual mode, the announcement must be picked from the list of available announcements, and cannot be empty when clicking the "Make Announcement" button. 
***** Exact sequence of operations

In manual mode, the driver must choose the announcement from the Train Controller, and hit the "Make Announcement" button in order to send the message over the train's speaker system.

If no valid announcement is selected when the "Make Announcement" button is pressed, a window will appear stating that an error has occurred.  

In automatic mode, the train automatically makes announcements based on the next station and when arriving at the current station. 
***** Communication facilities

The announcement made from the Train Controller must be sent through the train via the speaker system on the train. 
***** Relationship of output to inputs

When the user chooses to make an announcement, the message is selected via the drop-down menu, and sent to the train. 
***** Input/Output sequences

When the driver chooses the announcement from the drop-down and clicks the "Make Announcement" button, the message is sent to the train. The train should the broadcast the message via its speaker system. In automatic mode, the train automatically makes announcements through the speaker system.
**** Operating Lights

The interior lights should be turned on at night and when in a tunnel.

They should be turned off at sunrise and when exiting a tunnel.
***** Validity checks on inputs

The time should be checked to make sure its in a valid format.
***** Exact sequence of operations

In manual mode, when the user changes the states of the lights from on to off, or vice versa, the new state of the light is sent to the train, which changes the state of the light to what was selected. 

When a train is selected, the states of the lights will be displayed to the Train Controller.
***** Responses to abnormal situations

If the user tries to change the state of the lights when they are in a failure state, a window will appear stating that the lights must first be fixed. 
***** Communication facilities

The states of the lights comes from the train. When the state of the lights are changed from the Train Controller, it is sent to the train. 

When the state of the lights on the train are changed, it is updated to the Train Controller as well. 
***** Error handling and recovery

If the lights are in a failure mode, they must first be fixed before they can be changed. Trying to change the lights while in a failure mode will not work, and will result in a error message. 
***** Relationship of output to inputs

The state of the lights are determined by the state of the lights on the train. 

When any state is changed from the Train Controller, it is sent to the train. 

When the state of the lights are changed on the train, the states are updated on the Train Controller to reflect the new state. 
***** Input/Output sequences

When a train is selected, the states of its lights will be reflected on the Train Controller GUI. When any changes are made by the train the new state is picked up by the Train Controller. 

When any changes are made by the Train Controller, the new state is sent to the train. 
**** Air Conditioning

The air conditioning should be turned on when the thermometer reaches a certain temperature, and off when the thermometer drops below a certain temperature.
***** Validity checks on inputs

In automatic mode, the air conditioning unit is controlled automatically by the train depending on the thermometer on the train. 

In manual mode, the set temperature can't be lower than AC will allow. If it is set lower it will default to the lowest allowed temperature.

The temperature is not able to be changed if you are in a failure mode.
***** Exact sequence of operations

In automatic mode, the air conditioning unit is turned on and off automatically depending on the temperature determined by the train's thermometer. The state of the air conditioning unit is sent and displayed by the Train Controller.  

In manual mode, the air conditioning unit is turned on and off by driver regardless of the temperature determined by the thermometer. When the user changes the state of the air conditioning unit, the new state is sent to the train.  
***** Responses to abnormal situations

If the air conditioning unit is in failure mode, the state cannot be changed until it is fixed. 
***** Communication facilities

Changing the state of the air conditioning unit sends the new state to the train. The temperature from the thermometer is sent to the Train Controller to control the air conditioning unit when in automatic mode. 
***** Error handling and recovery

If the air conditioning unit is in failure mode, it must be fixed before the states can be changed. 
***** Relationship of output to inputs

In manual mode, when the driver changes the state of the air conditioning unit, the state is sent to the train to control the state of the air conditioning unit. 

In automatic mode, the temperature from the train's thermometer is sent to the Train Controller, and based on its value, changes the state of the air conditioning unit. 
***** Input/Output sequences

In manual mode, the state of the selected train's air conditioning unit is displayed to the Train Controller. When the user changes the state of the air conditioning unit, the new state is sent to the train's air conditioning unit and is updated to mimic the new state. 

In automatic mode, the state of the selected train's air conditioning unit is displayed to the Train Controller. Using the thermometer on the train, the temperature is sent to the Train Controller. Based on the value of the temperature, the Train Controller will change the state of the air conditioning unit. The new state will then be sent to the train to update the air conditioning unit with the new state. 
***** Formulas for input to output conversion

The temperature is retrieved in Celsius, and must be converted to Fahrenheit. The equation is: F = (C)*1.8 + 32.  
**** Heating

The heating unit should be turned on when the thermometer drops below a certain temperature, and off when the thermometer reaches a certain temperature.
***** Validity checks on inputs

In automatic mode, the heating unit is controlled automatically based on the temperature read by the train's thermometer.

In manual mode, the set temperature can't be higher than heater will allow. If it is set higher, then it will default to the highest allowed temperature.

The temperature is not able to be changed if you are in a failure mode.
***** Exact sequence of operations

In automatic mode, the heating unit is turned on and off automatically depending on the temperature determined by the train's thermometer. The state of the heating unit is sent and displayed by the Train Controller.  

In manual mode, the heating unit is turned on and off by the driver regardless of the temperature determined by the thermometer. When the user changes the state of the heating unit, the new state is sent to the train.  
***** Responses to abnormal situations

If the heating unit is in failure mode, the state cannot be changed until it is fixed. 
***** Communication facilities

Changing the state of the heating unit sends the new state to the train. The temperature from the thermometer is sent to the Train Controller to control the heating unit when in automatic mode. 
***** Error handling and recovery

If the heating unit is in failure mode, it must be fixed before the states can be changed. 
***** Relationship of output to inputs

In manual mode, when the driver changes the state of the heating unit, the state is sent to the train to control the state of the heating unit.

In automatic mode, the temperature from the train's thermometer is sent to the Train Controller, and based on its value, changes the state of the heating unit. 
***** Input/Output sequences

In manual mode, the state of the selected train's heating unit is displayed to the Train Controller. When the user changes the state of the heating unit, the new state is sent to the train's heating unit.

In automatic mode, the state of the selected train's heating unit is displayed to the Train Controller. Using the thermometer on the train, the temperature is sent to the Train Controller. Based on the value of the temperature, the Train Controller will change the state of the heating unit. The new state will then be sent to the train to update the heating unit with the new state.
***** Formulas for input to output conversion

The temperature is retrieved in Celsius, and must be converted to Fahrenheit. The equation is: F = (C)*1.8 + 32.

**** Communication
***** Inputs 
****** Suggested Speed
******* Used for?

Suggested speed is used to determine the speed of the train. If in manual mode, the train cannot go faster than the suggested speed. 
******* Checks to do

Checks to make sure that the suggested speed is not higher than the block speed. If it is, then the suggested speed is ignored. 
******* From where?

The suggested speed is determined from the train model, who gets the suggested speed from the track model. The suggested speed is set by the CTC.  
****** Block Speed
******* Used for?

In manual mode, block speed is used to determine the max speed the driver can set the speed of the train to.
******* Checks to do

Checks to make sure that the speed of the train and/or the set speed is not greater than the block speed. 
******* From where?

The block speed is determined by the current block the train is in. This is determined by the GPS on board the train. 
****** Authority
******* Used for?

Authority is used to determine how far (in distance) the train is permitted to travel.
******* Checks to do

Check to make sure that the authority does not contain any alphanumeric (A-Z, a-z) or special characters (%, !, *, etc..).
******* From where?

Authority is picked up by the train model from the track. The authority is initially set by the dispatcher.  
****** Kp
******* Used for?

Used to determine the power the train must produce to reach the set speed. 
******* From where?

Kp is set by the engineers, and can be configured from the train controller GUI. 
****** Ki
******* Used for?

Used to determine the power the train must produced to reach the set speed.  
******* From where?

Ki is set by the engineers, and can be configured from the train controller GUI. 
***** Outputs 
****** Train's Set Speed
******* Used for?

Used to set a new speed for the selected train.
****** Initiate Emergency Brake
******* Used for?

Used to initiate the emergency brake of the selected train.
******* To where?

Sends a signal to the train's brake control unit to initiate the emergency brakes on the train. 
****** Initiate Service Brake
******* Used for?

Used to initiate the service brakes of the selected train.
******* To where?

Sends a signal to the train's brake control unit to initiate the service brakes on the train. 
**** Failure Modes

The Train Controller relays the failures of the selected train to the user. If in manual mode, the driver can send a request to fix the failure. If in automatic mode, the train will automatically dispatch a request to fix the failures when they occur. 
***** Antenna Failure: 
****** What does it mean?

An antenna failure means that the antenna on the train is not working properly or communication between the antenna is broken.  
****** When does it occur?

An antenna failure occurs when the antenna no longer sends a signal.
****** Which modules are affected?

The train model, and MBO and Scheduler are affected by the failure since there is no longer a way to get information to and from the train. 
****** How do you recover?

The CTC must dispatch a repair crew to go out to the train and fix the train.
Once the repair is made, the signal from the antenna will be picked up again, and will be reflected to the Train Controller.

In manual mode, the user must manually send a request to fix the antenna. 

In automatic mode, when the failure is detected, the Train Controller will automatically send a request to the CTC.  

***** Brake Failure: 
****** What does it mean?

Brake failure indicates that the brakes on the train no longer are operational. 
****** Which modules are affected?

The train model is affected by the failure since there is no longer a way to stop the train.
****** How do you recover?

The CTC must dispatch a repair crew to go out to the train and fix the train. 

In manual mode, the driver must manually send a request to fix the antenna. 

In automatic mode, the Train Controller will automatically send a request to the CTC to send a repair crew when the failure is detected. 

***** Power Failure:
****** What does it mean?

Power failure means that the utilities on the train (A/C, Heat, Lights, and Doors) are no longer operational. These utilities will be displayed in the failure state on the Train Controller. 
****** Which modules are affected?

The train model is affected by this failure since there is no way to control the train's utilities. 
****** How do you recover?

The CTC must dispatch a repair crew to go out to the train and fix the train. 
Once the repair is made, the signal from the utilities will be picked up again, and will be reflected to the Train Controller.

In manual mode, the driver must manually send a request to fix the utilities. 

In automatic mode, the Train Controller will automatically send a request to the CTC to send a repair crew when the failure is detected. 
*** Scheduler/MBO
**** Schedules
***** Create Driver Schedule

A schedule for the train drivers should be created from the given input.

The user can provide an expected throughput and the minimum number of drivers should be returned.

The user can enter in a number of drivers and the MBO should notify the user whether or not that is sufficient to handle the throughput.
****** Validity checks on inputs

The throughput will be checked to make sure that it contains digits (0-9), and does not contain any alphanumeric (A-Z), or special (&,*,!,@, etc..) characters.  

If the number of drivers is not sufficient to support the throughput, the user should be notified.

The user should be notified if the throughput they entered was negative or too high for the system to handle.
****** Exact sequence of operations

The user should first request a throughput. A train schedule will be generated based upon the track information. The driver' schedules will be created based upon the train schedule.
****** Communication facilities

Gets the throughput from the user.
***** Create Train Schedule

A schedule for the trains should be created from the given input taken from the excel file, taking into account increased demand at rush hours.
****** Validity checks on inputs

The input should be checked to make sure that each train completes its route in a cycle.
****** Exact sequence of operations

Route times should be checked to find the minimum number of trains necessary to make the schedule.

Trains should be checked to make sure they are within safe braking distance.
A schedule for the trains should be created from the given input taken from the excel file, taking into account increased demand at rush hours.
****** Responses to abnormal situations

Trains should return to the yard at to add cars before rush hour, and remove cars after rush hour.
****** Communication facilities

The user will load an excel file of the train routes before the program starts.
***** Display Driver Schedule

The driver's schedules that was created should be displayed and view-able through the office. Key should be included to help interpret.
****** Exact sequence of operations

The data should be read in from how it was stored. It should be interpreted and loaded into the GUI for display.
***** Display Train Schedule

The trains' schedules that was created should be displayed and view-able through the office. Key should be included to help interpret.
****** Exact sequence of operations

The data should be read in from how it was stored. It should be interpreted and loaded into the GUI for display.
**** Monitor Trains

All trains and their variance should be displayed.
****** Exact sequence of operations

The GPS data of the trains should be displayed.

The variance between this GPS data and their scheduled data should be displayed.
****** Communication facilities

All track/block information as well as the speed/authority/GPS location of trains comes from the wayside controller.
**** Switch Mode

The MBO will have to handle setting things up when the mode is changed by the CTC.
***** Exact sequence of operations

When switching from MBO mode to fixed block overlay mode the track is checked to see whether two or more trains are in the same block. If they are not, the mode is switched to MBO mode. If they are, a "shutdown" procedure will have to occur before the mode can be switched. In order to make the switch over no two trains can be in the same block. The speeds and authorities of the trains should be adjusted so that the trains are spread out to no more than one per block. Once this is done, control is transferred to fix block mode.

When switching from fixed block overlay mode to MBO mode, control can be transferred immediately.
***** Communication facilities

The CTC will have to provide the MBO with the locations of the trains.
**** Communication
***** Inputs 
****** Mode
******* From where?

CTC
******* Used for?

Determine whether schedule is in MBO mode.
****** Train Information
******* From where?

Trains
******* Used for?

Monitoring/Displaying trains
***** Outputs 
****** Schedule
******* Used for?

Displaying to dispatcher. 
******* To where?

CTC
****** Speed/Authority
******* To where?

CTC
******* Used for?

Giving a suggestion of speed and authority to wayside to communicate to trains.
** Non-functional Requirements
*** Performance
1. The system should be capable of running at wall-clock time.
2. The system should be capable of running at 10 times speed.
3. The system should have an automatic mode with scenarios in order to demo the system.
*** Reliability
1. The system must be safety critical.
*** Availability
1. The program must be able to run on Windows 10 with Java 8 installed.
2. The program can be run from it's executable JAR file.
*** Security
The computer that this program will be running on is expected to have its own security. No special protection was built into this application.

*** Maintainability
The system shall be maintained until April 27, 2016.

Each module should be capable of functioning on its own.
*** Portability
The program will be able to run on Windows 10 with Java 8 installed.
** Logical Database Requirements
The data for the track model shall be input in to the system through an excel document. We will have a python script parse this file and insert it into a database. This database should then provide the necessary information to the appropriate modules.
** Design Constraints

1. The system shall be submitted as an executable.
2. The executable should be able to run on Windows 10.
3. The system is to be coded primarily in Java, with Python to help with scripting. 
4. Each module will have a Graphical User Interface (GUI) for ease of use.
5. Its user interface was created using Eclipse's WindowBuilder plug-in.
6. The system must be adaptable for different track layouts.
7. The system is a safety critical application.

* Appendices
** User Interface Diagrams

See the user manual for detailed user interface diagrams.



