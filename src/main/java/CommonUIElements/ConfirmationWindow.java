package CommonUIElements;


import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * A window that displays a title and a message for a given amount of time, in seconds, 
 * and then closes. 
 * 
 * @author Andrew Lendacky
 */
public class ConfirmationWindow extends javax.swing.JFrame {

    /**
     * How much time, in seconds, the window how been open for.
     */
    private int timeElapsed = 0; 
    
    /**
     * How long, in seconds, the window should stay open before closing.
     */
    private int shouldClose; 
    
    /**
     * Timer used to keep track of lifetime of the window. 
     * 
     * This timer will close the window once the 'timeElapsed' reaches the 'shouldClose' value.
     */
    private Timer closeWindow = new Timer(1000, new ActionListener(){
       
        public void actionPerformed(ActionEvent e) {
            timeElapsed++; 
           
            if (timeElapsed == 1){
                // close the window
                System.out.println("Closing Window"); 
                closeWindow(); 
                closeWindow.stop();
            }       
        }   
        });
    
    /**
     * Creates new form ConfirmationWindow
     */
    public ConfirmationWindow() {
        initComponents();
    }
    
    /** 
     * Constructor that creates a ConfirmationWindow with given title, message, and 
     * lifetime. 
     * 
     * @param title the title for the message.
     * @param message the message.
     * @param shouldClose how long the window should stay open for.
     */
    public ConfirmationWindow(String title, String message, int shouldClose){
    
        initComponents();
        
        this.title.setText(title);
        this.message.setText(message);
        this.shouldClose = shouldClose; 
        
        this.setVisible(true);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        
        this.closeWindow.start();
    }
     
    /**
     * Sets the title of the message. 
     * 
     * @param title the title of the message.
     */
    public void setTitle(String title){
        
        this.title.setText(title);   
    }
    
    /**
     * Sets the message of window.
     * 
     * @param message the message you want the window to display.
     */
    public void setMessage(String message){
    
        this.message.setText(message);
    }
    
    /**
     * Closes the window by calling the dispose function. 
     */
    public void closeWindow(){
 
        this.dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        message = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        title.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Title");

        message.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        message.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        message.setText("Put message here...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(message, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                    .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(message, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfirmationWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfirmationWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfirmationWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfirmationWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConfirmationWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel message;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
