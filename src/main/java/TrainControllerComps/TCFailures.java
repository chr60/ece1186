package TrainControllerComps;

import java.awt.Color;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.LinkedList;
import javax.swing.JTextArea;
import javax.swing.JTextPane;
import javax.swing.text.AttributeSet;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Andrew
 */
public class TCFailures extends javax.swing.JFrame {

    private TestTrain selectedTrain;
    private LinkedList<String> logbook; 
    private JTextPane errorLogs; 
    /**
     * Creates new form TCFailures
     */
    public TCFailures() {
        initComponents();
    }
    
    public TCFailures(TestTrain train) {
        
        initComponents();
        this.logbook = new LinkedList(); 
        this.selectedTrain = train;
        this.refreshUI();  
    }
    
    private void refreshUI(){
    
        this.trainID_Label.setText(this.selectedTrain.id);
        
        // update the radio buttons based on the train
        
        //FIX ME: For, testing, we will assume they begin working
        
        this.antennaWorking_RB.setSelected(true);
        this.brakesWorking_RB.setSelected(true);
        this.powerWorking_RB.setSelected(true);      
    }
    
    /**
     * Determine what the state of the radio buttons are in based on the 
     * train model. Not currently implemented
     *
     */
    private void initRadioButtons(){
    
        
    }
    
    public void setErrorLogs(JTextPane errLogs){
    
        this.errorLogs = errLogs;
    }
    
    private void printLogBook(){
    
        this.errorLogs.setEditable(true);
        for (String log : this.logbook){
        
            // print the log to the error logs
            appendToPane(this.errorLogs, log + "\n", Color.RED); 
        }
        
        this.errorLogs.setEditable(false);
    }
    
    private void appendToPane(JTextPane tp, String msg, Color c){
        StyleContext sc = StyleContext.getDefaultStyleContext();
        AttributeSet aset = sc.addAttribute(SimpleAttributeSet.EMPTY, StyleConstants.Foreground, c);

        aset = sc.addAttribute(aset, StyleConstants.FontFamily, "Lucida Console");
        aset = sc.addAttribute(aset, StyleConstants.Alignment, StyleConstants.ALIGN_JUSTIFIED);

        int len = tp.getDocument().getLength();
        tp.setCaretPosition(len);
        tp.setCharacterAttributes(aset, false);
        tp.replaceSelection(msg);
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        antennaGroup = new javax.swing.ButtonGroup();
        powerGroup = new javax.swing.ButtonGroup();
        brakeGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        antennaWorking_RB = new javax.swing.JRadioButton();
        antennaFailure_RB = new javax.swing.JRadioButton();
        powerFailure_RB = new javax.swing.JRadioButton();
        powerWorking_RB = new javax.swing.JRadioButton();
        brakesFailure_RB = new javax.swing.JRadioButton();
        brakesWorking_RB = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        requestFix = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        trainID_Label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel1.setText("Antenna:");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel2.setText("Power:");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel3.setText("Brakes:");

        antennaGroup.add(antennaWorking_RB);
        antennaWorking_RB.setText("Working");
        antennaWorking_RB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                antennaWorking_RBActionPerformed(evt);
            }
        });

        antennaGroup.add(antennaFailure_RB);
        antennaFailure_RB.setText("Failure");

        powerGroup.add(powerFailure_RB);
        powerFailure_RB.setText("Failure");

        powerGroup.add(powerWorking_RB);
        powerWorking_RB.setText("Working");
        powerWorking_RB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                powerWorking_RBActionPerformed(evt);
            }
        });

        brakeGroup.add(brakesFailure_RB);
        brakesFailure_RB.setText("Failure");

        brakeGroup.add(brakesWorking_RB);
        brakesWorking_RB.setText("Working");
        brakesWorking_RB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brakesWorking_RBActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Communications and Vitals");

        requestFix.setText("Request Fix");
        requestFix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestFix(evt);
            }
        });

        jLabel5.setText("Train ID:");

        trainID_Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        trainID_Label.setText("(train ID)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel3)))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(powerWorking_RB)
                    .addComponent(brakesWorking_RB)
                    .addComponent(antennaWorking_RB))
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(antennaFailure_RB)
                    .addComponent(powerFailure_RB)
                    .addComponent(brakesFailure_RB))
                .addGap(31, 31, 31))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(requestFix, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(trainID_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(trainID_Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(antennaWorking_RB)
                    .addComponent(antennaFailure_RB))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(powerWorking_RB)
                    .addComponent(powerFailure_RB))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(brakesWorking_RB)
                    .addComponent(brakesFailure_RB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(requestFix, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void brakesWorking_RBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brakesWorking_RBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_brakesWorking_RBActionPerformed

    private void powerWorking_RBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_powerWorking_RBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_powerWorking_RBActionPerformed

    private void antennaWorking_RBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_antennaWorking_RBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_antennaWorking_RBActionPerformed

    private void requestFix(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestFix
        
        // reset all the problem back to normal 
        String log; 
        String time = this.getTime();
        
        if (this.antennaFailure_RB.isSelected()){
        
            log = "**Request to fix Antenna system - " + time;
            this.logbook.add(log);
            this.antennaWorking_RB.setSelected(true);
        }
        
        if (this.powerFailure_RB.isSelected()){
            log = "**Request to fix Power system - " + time;
            this.logbook.add(log);
            this.powerWorking_RB.setSelected(true);
        }
        
        if(this.brakesFailure_RB.isSelected()){
            log = "**Request to fix Brake system - " + time;
            this.logbook.add(log);
            this.brakesWorking_RB.setSelected(true);
        }
          
        this.printLogBook();
        this.logbook.clear();
    }//GEN-LAST:event_requestFix

    private String getTime(){
    
        DateFormat dateandtime = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        DateFormat sdf = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");        
        LocalDate localDate = LocalDate.now();
        Calendar cal = Calendar.getInstance();
        sdf = new SimpleDateFormat("HH:mm:ss a");
              
        // get time
        return sdf.format(cal.getTime());
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TCFailures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TCFailures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TCFailures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TCFailures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TCFailures().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton antennaFailure_RB;
    private javax.swing.ButtonGroup antennaGroup;
    private javax.swing.JRadioButton antennaWorking_RB;
    private javax.swing.ButtonGroup brakeGroup;
    private javax.swing.JRadioButton brakesFailure_RB;
    private javax.swing.JRadioButton brakesWorking_RB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JRadioButton powerFailure_RB;
    private javax.swing.ButtonGroup powerGroup;
    private javax.swing.JRadioButton powerWorking_RB;
    private javax.swing.JButton requestFix;
    private javax.swing.JLabel trainID_Label;
    // End of variables declaration//GEN-END:variables
}
