package TrainControllerComps;

import CommonUIElements.ConfirmationWindow;
import TrainModel.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * This class is responsible to set the Kp and Ki constants of a given train. 
 * 
 * This class collaborates with the Train Controller and the Train class. 
 * 
 * @author Andrew Lendacky
 */
public class TCEngineerPanel extends javax.swing.JFrame {

    /**
     * The selected train whose power constants are being set. 
     * This train corresponds to the train that is being controlled by the Train Controller. 
     */
    private Train selectedTrain; 
    
    /**
     * Constructor for creating a TCEngineerPanel object without any selected train. 
     * The selected train must be passed in by the Train Controller before being used.
     * 
     */
    public TCEngineerPanel() {
        initComponents();
    }
    
    /**
     * Constructor for creating a TCEngineerPanel object with a given train. 
     * 
     * @param train the train controlled by the Train Controller. 
     */
    public TCEngineerPanel(Train train){
            
        this.initComponents();
        
        // set the train and refresh the UI
        this.selectedTrain = train;
        this.refreshUI();
    }
    
    /**
     * Refreshes the UI for the panel when a train is selected.
     * If a train already has a set Kp and Ki, it is displayed in the text fields
     * If not the train has no set Kp and Ki, the text fields are set to 0.0. 
     * 
     */
    private void refreshUI(){
    
        // set the label for the train's id
        this.trainId.setText(Integer.toString( this.selectedTrain.getID() ) ); 
        
        // check if the train has a kp and ki already
        if (this.selectedTrain.powerConstantsSet()){
        
            this.KpTextField.setText(Double.toString(this.selectedTrain.getKp()));
            this.KiTextField.setText(Double.toString(this.selectedTrain.getKi()));
        }else{
        
            // set it to 0.0 if the train doesnt have a kp and ki
            this.KpTextField.setText("0.0");
            this.KiTextField.setText("0.0");
        }
    }
    
    /**
     * Sets the train that the user wants to set the Kp and Ki for. 
     * 
     * @param train the train to control
     */
    public void setTrain(Train train){
        
        this.selectedTrain = train;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        KpLabel = new javax.swing.JLabel();
        KiLabel = new javax.swing.JLabel();
        KiTextField = new javax.swing.JTextField();
        KpTextField = new javax.swing.JTextField();
        setConstants = new javax.swing.JButton();
        trainIdLabel = new javax.swing.JLabel();
        trainId = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        KpLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        KpLabel.setText("Kp: ");

        KiLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        KiLabel.setText("Ki: ");

        KiTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        KiTextField.setText("0.0");

        KpTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        KpTextField.setText("0.0");

        setConstants.setText("Set");
        setConstants.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setConstants(evt);
            }
        });

        trainIdLabel.setText(" Train ID:");

        trainId.setText("(id_here)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(setConstants, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(KiLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(KpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(KiTextField)
                            .addComponent(KpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(trainIdLabel)
                        .addGap(18, 18, 18)
                        .addComponent(trainId, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trainIdLabel)
                    .addComponent(trainId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(KpLabel)
                    .addComponent(KpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(KiLabel)
                    .addComponent(KiTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(setConstants)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Gives the train the specified Kp and Ki that are in the text field. 
     * If the entries in the text field are not doubles, then an exception will be thrown, and the Kp and Ki will not be set. 
     * 
     * @param evt the sender of the event, i.e., the "Set" button. 
     */
    private void setConstants(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setConstants
               
        // makes sure the train is not null
        if (this.selectedTrain != null){
            
            System.out.println("Kp_TextField: " + this.KpTextField.getText());             
            System.out.println("Ki_TextField: " + this.KiTextField.getText());
            
            // give the train the set Kp and Ki
            this.selectedTrain.setKpAndKi(Double.parseDouble(this.KpTextField.getText()), Double.parseDouble(this.KiTextField.getText()) );
            
            System.out.println("Kp: " + this.selectedTrain.getKp());             
            System.out.println("Ki: " + this.selectedTrain.getKi()); 
            
            // display a confirmation window for 1 second
            ConfirmationWindow confirmWindow = new ConfirmationWindow("Kp and Ki Set", "Kp and Ki were successfully set.", 1); 
            this.dispose();   
        }else{
            System.out.println("No Train Selected"); 
        }
        
        
        
    }//GEN-LAST:event_setConstants

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TCEngineerPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TCEngineerPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TCEngineerPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TCEngineerPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TCEngineerPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel KiLabel;
    private javax.swing.JTextField KiTextField;
    private javax.swing.JLabel KpLabel;
    private javax.swing.JTextField KpTextField;
    private javax.swing.JButton setConstants;
    private javax.swing.JLabel trainId;
    private javax.swing.JLabel trainIdLabel;
    // End of variables declaration//GEN-END:variables
}
