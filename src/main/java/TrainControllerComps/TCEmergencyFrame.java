package TrainControllerComps;

import java.util.LinkedList;
import javax.swing.JTextArea;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * This class is responsible for confirming the use of the selected trains emergency brake when in Manual mode. 
 * 
 * This class collaborates with the Train Controller, and the Train class. 
 * 
 * @author Andrew Lendacky
 */
public class TCEmergencyFrame extends javax.swing.JFrame {

    /**
     * The train that is being controlled by the Train Controller class. 
     */
    TestTrain selectedTrain; 
    
    /**
     * List that contains messages that are to be printed to the operating log.
     */
    private LinkedList<String> logbook; 
    
    /**
     * Area used to print messaged from the logbook to. 
     */
    private JTextArea operatingLogs; 
    
    /**
     * Constructor for creating a TCEmergencyFrame object without any selected train. 
     * Selected train must be passed in by the Train Controller class. 
     * 
     */
    public TCEmergencyFrame() {
        initComponents();   
        this.logbook = new LinkedList<String>();
    }
    
    /**
     * Constructor for creating a TCEmergencyFrame object with a selected train. 
     * 
     * @param train the train being controlled by the Train Controller
     */
    public TCEmergencyFrame(TestTrain train){
        
        this.initComponents();
        this.selectedTrain = train; 

        this.logbook = new LinkedList<String>();
        this.operatingLogs = null; 
        this.refreshUI();
    }
    
    /**
     * Sets the selected train. This method should be called from the Train Controller class. 
     * 
     * @param train the selected train controlled by the Train Controller class. 
     */
    public void setTrain(TestTrain train){
        
        this.selectedTrain = train;  
    }
    
    /**
     * Refreshes the UI elements in the window to update any changed train information. 
     * 
     */
    private void refreshUI(){
    
        // set the corect label text
        this.trainIdLabel.setText(this.selectedTrain.id + " ?");
    }
    
    /**
     * Sets the operating log to be used to print messages in. 
     * 
     * @param operatingLog the operating log. 
     */
    public void setOperatingLog(JTextArea operatingLog){
    
        this.operatingLogs = operatingLog;
    }
    
    /**
     * Prints the logbook to the operating log, and then clears the logbook. 
     * 
     */
    private void printLogbook(){
        
        if (this.logbook.isEmpty() == false && this.operatingLogs != null){
        
            for (String logs : this.logbook){
                
                this.operatingLogs.setText(this.operatingLogs.getText() + logs + "\n");   
            }
        }   
        this.logbook.clear();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        confirmationLabel = new javax.swing.JLabel();
        confirmButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        uiTrainIdLabel = new javax.swing.JLabel();
        trainIdLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Emergency Brake Inititated");

        confirmationLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        confirmationLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        confirmationLabel.setText("<html> <p>Are you sure you want to initiate the emergency brake for</p> <html> ");

        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                initiateEmgBrake(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel(evt);
            }
        });

        uiTrainIdLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        uiTrainIdLabel.setText("Train ID:");

        trainIdLabel.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        trainIdLabel.setText("(id_here)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(confirmationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                    .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
            .addGroup(layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(uiTrainIdLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(trainIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(confirmationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uiTrainIdLabel)
                    .addComponent(trainIdLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Initiates the emergency brake on the selected train.
     * 
     * @param evt the sender of the event, i.e., the 'Confirm' button
     */
    private void initiateEmgBrake(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_initiateEmgBrake
               
        this.logbook.add("Engaging the E-Brake!");
        
        // FIX ME: Change this once the Train Model is complete
        this.selectedTrain.speed = this.selectedTrain.speed - 5; 
        this.printLogbook();
        
        this.dispose();
    }//GEN-LAST:event_initiateEmgBrake

    /**
     * Closes the window without engaging the selected train's emergency brake.
     * 
     * @param evt the sender of the event, i.e., the 'Cancel' button
     */
    private void cancel(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel
        
        this.dispose();
    }//GEN-LAST:event_cancel

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TCEmergencyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TCEmergencyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TCEmergencyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TCEmergencyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TCEmergencyFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton confirmButton;
    private javax.swing.JLabel confirmationLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel trainIdLabel;
    private javax.swing.JLabel uiTrainIdLabel;
    // End of variables declaration//GEN-END:variables
}
